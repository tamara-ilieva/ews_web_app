/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RegisterImport } from './routes/register'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutUploadedimagesImport } from './routes/_layout/uploaded_images'
import { Route as LayoutStaticimagesImport } from './routes/_layout/static_images'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutImagesImport } from './routes/_layout/images'
import { Route as LayoutDynamicimagesImport } from './routes/_layout/dynamic_images'
import { Route as LayoutDiseasesImport } from './routes/_layout/diseases'
import { Route as LayoutAdminImport } from './routes/_layout/admin'

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUploadedimagesRoute = LayoutUploadedimagesImport.update({
  path: '/uploaded_images',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutStaticimagesRoute = LayoutStaticimagesImport.update({
  path: '/static_images',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutImagesRoute = LayoutImagesImport.update({
  path: '/images',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDynamicimagesRoute = LayoutDynamicimagesImport.update({
  path: '/dynamic_images',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiseasesRoute = LayoutDiseasesImport.update({
  path: '/diseases',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/diseases': {
      preLoaderRoute: typeof LayoutDiseasesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dynamic_images': {
      preLoaderRoute: typeof LayoutDynamicimagesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/images': {
      preLoaderRoute: typeof LayoutImagesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/static_images': {
      preLoaderRoute: typeof LayoutStaticimagesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/uploaded_images': {
      preLoaderRoute: typeof LayoutUploadedimagesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutDiseasesRoute,
    LayoutDynamicimagesRoute,
    LayoutImagesRoute,
    LayoutItemsRoute,
    LayoutSettingsRoute,
    LayoutStaticimagesRoute,
    LayoutUploadedimagesRoute,
    LayoutIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  RegisterRoute,
  ResetPasswordRoute,
])

/* prettier-ignore-end */
